// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReasonReact from "reason-react/src/ReasonReact.js";

function validatedFriendToJs(param) {
  return {
          name: param[/* name */0],
          age: param[/* age */1],
          email: param[/* email */2]
        };
}

function validatedFriendFromJs(param) {
  return /* record */[
          /* name */param.name,
          /* age */param.age,
          /* email */param.email
        ];
}

var emptyFriend = /* record */[
  /* name */"",
  /* age */"",
  /* email */""
];

function toUnvalidated(param) {
  return /* record */[
          /* name */param[/* name */1],
          /* age */String(param[/* age */2]),
          /* email */param[/* email */3]
        ];
}

var component = ReasonReact.reducerComponent("FriendForm");

function make(initState, handleSubmit, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var state = param[/* state */1];
              var send = param[/* send */3];
              return React.createElement("form", {
                          onSubmit: (function (e) {
                              e.preventDefault();
                              return Curry._1(send, /* Submit */0);
                            })
                        }, React.createElement("div", {
                              className: "input-container"
                            }, React.createElement("label", undefined, "Name", React.createElement("input", {
                                      value: state[/* name */0],
                                      onChange: (function (e) {
                                          return Curry._1(send, /* ChangeField */[
                                                      /* Name */0,
                                                      e.target.value
                                                    ]);
                                        })
                                    })), React.createElement("label", undefined, "Age", React.createElement("input", {
                                      value: state[/* age */1],
                                      onChange: (function (e) {
                                          return Curry._1(send, /* ChangeField */[
                                                      /* Age */1,
                                                      e.target.value
                                                    ]);
                                        })
                                    })), React.createElement("label", undefined, "Email", React.createElement("input", {
                                      value: state[/* email */2],
                                      onChange: (function (e) {
                                          return Curry._1(send, /* ChangeField */[
                                                      /* Email */2,
                                                      e.target.value
                                                    ]);
                                        })
                                    }))), React.createElement("button", undefined, "Submit"));
            }),
          /* initialState */(function (param) {
              if (initState !== undefined) {
                return toUnvalidated(initState);
              } else {
                return emptyFriend;
              }
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action) {
              if (action) {
                switch (action[0]) {
                  case 0 : 
                      var str = action[1];
                      return (function (state) {
                          return /* Update */Block.__(0, [/* record */[
                                      /* name */str,
                                      /* age */state[/* age */1],
                                      /* email */state[/* email */2]
                                    ]]);
                        });
                  case 1 : 
                      var str$1 = action[1];
                      return (function (state) {
                          return /* Update */Block.__(0, [/* record */[
                                      /* name */state[/* name */0],
                                      /* age */str$1,
                                      /* email */state[/* email */2]
                                    ]]);
                        });
                  case 2 : 
                      var str$2 = action[1];
                      return (function (state) {
                          return /* Update */Block.__(0, [/* record */[
                                      /* name */state[/* name */0],
                                      /* age */state[/* age */1],
                                      /* email */str$2
                                    ]]);
                        });
                  
                }
              } else {
                return (function (state) {
                    Curry._1(handleSubmit, state);
                    return /* Update */Block.__(0, [emptyFriend]);
                  });
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

export {
  validatedFriendToJs ,
  validatedFriendFromJs ,
  emptyFriend ,
  toUnvalidated ,
  component ,
  make ,
  
}
/* component Not a pure module */
